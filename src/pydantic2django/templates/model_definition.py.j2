class {{ model_name }}(Pydantic2DjangoBaseClass):
    {% for field_name, field_definition in fields %}
    {{ field_name }} = {{ field_definition }}
    {% endfor %}
    class Meta(Pydantic2DjangoBaseClass.Meta):
        db_table = "{{ meta.db_table }}"
        app_label = "{{ meta.app_label }}"
        verbose_name = "{{ meta.verbose_name }}"
        verbose_name_plural = "{{ meta.verbose_name_plural }}"
        abstract = False

    class PydanticConfig:
        module_path = "{{ module_path }}"

    def __init__(self, *args, **kwargs):
        kwargs.setdefault("object_type", "{{ original_name }}")
        super().__init__(*args, **kwargs)
